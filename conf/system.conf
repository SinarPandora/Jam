# Bot 设置
bot {
  # Bot 的名字，目前用处不大
  name = "果酱"
  # Master QQ 号，即能触发 Master 指令的 QQ 用户，只能设置一个
  master_qq = 1211402231
  # 响应频率：范围 1 ~ 100 的整数，代表收到消息后有百分之几的几率触发步骤
  # 设置为 100 时视为必定触发（如果只想控制某些步骤的触发几率，请使用触发频率语句）
  response_frequency = 100
}

# 系统设置
system {
  # 是否开启调试模式
  # 调试模式下会输出收到的每一条消息，会略微导致响应速度变慢，并且会导致日志文件明显变大
  # 在调试应用和复杂的 SSDL 时可以考虑打开
  # 设置为 true 表示开启
  # 设置为 false 表示不开启
  debugMode = true
  # SSDL 文件目录
  # 指定 SSDL 文件的存放目录
  ssdl_path = "./conf/ssdl"
  # SSDL 文件后缀名
  # 可以根据喜好设置多个（强迫症选项）
  # 请用英文逗号隔开，并将每个后缀名用英文双引号括起来
  file_extension = [".ssdl", ".jam3"]
}


# 以下是开发者配置，如果你不知道会发生什么，请不要修改！

# 酷Q HTTP 插件连接设置
coolQQ {
  # 酷 Q 服务器地址（如果是本地，请设置为 127.0.0.1）
  host = "127.0.0.1"
  port {
    # 发送消息端口
    post = 5700
    # 收消息端口
    socket = 7890
  }
}

# 内存数据库配置
databases {

  # 默认模式
  temporary_memory {
    profile = "slick.jdbc.H2Profile$"
    db {
      dirver = "org.h2.Driver"
      url = "jdbc:h2:mem:temporary_memory"
      connectionPool = "HikariCP"
      keepAliveConnection = true
    }
  }

  # Debug 模式
  temporary_memory_debug {
    profile = "slick.jdbc.H2Profile$"
    db {
      dirver = "org.h2.Driver"
      # debug 模式下会将 h2 内存数据库保存为文件并存储在 db 文件夹下
      # 但是要注意的是，该文件同时只能被一个程序读取，这意味着如果你使用其他软件读取其内容时，无法启动 Bot
      url = "jdbc:h2:./db/temporary_memory"
      connectionPool = "HikariCP"
      keepAliveConnection = true
    }
  }
}