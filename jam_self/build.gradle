plugins {
    id "idea"
    id "java"
    id "scala"
    id "distribution"
    id "application"
    id "java-library"
    id "io.freefair.lombok" version "5.3.0"
}

sourceCompatibility = "11"

scala {
    zincVersion = "1.3.5"
}

distributions {
    main {
        distributionBaseName = "jam_self"
        contents {
            into("conf") {
                from "conf/."
                exclude "*test*"
                exclude "*local*"
            }
        }
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ['-Xsource:3', '-Xasync']
}

// [distZip, distTar]*.dependsOn tasks.findByPath(':jam_mirai_backend:downloadBackend')

application {
    mainClass = 'o.lartifa.jam.Bootloader'
    applicationDefaultJvmArgs = ["-Xmx1025m", "-Xms512m", "-ea", "-server", "-Dfile.encoding=UTF-8"]
}

startScripts {
    classpath = files('$APP_HOME/lib/*')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile
                .text.replace('set CLASSPATH=%APP_HOME%\\lib\\*',
                'set CLASSPATH=%APP_HOME%\\lib\\*;%APP_HOME%\\plugins\\*')
        unixScriptFile.text = unixScriptFile
                .text.replace('CLASSPATH=$APP_HOME/lib/*',
                'CLASSPATH=$APP_HOME/lib/*:$APP_HOME/plugins/*')
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.aliyun.com/repository/jcenter/' }
    mavenCentral()
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

configurations.all {
    exclude group: "ch.qos.logback", module: "logback-classic"
}

dependencies {
    // Scala
    api("org.scala-lang:scala-library:$scala_version")

    // Language extensions
    api('com.chuusai:shapeless_2.13:2.3.7')
    api("org.scala-lang:scala-reflect:$scala_version")

    // Core
    api(project(":picq_bot_x_fork"))
    api(project(":jam_utils"))

    // Meta
    api('com.jayway.jsonpath:json-path:2.7.0')
    api("org.codehaus.groovy:groovy-all:$groovy_version")

    // Database
    api("com.typesafe.slick:slick_2.13:$slick_version")
    api("com.typesafe.slick:slick-codegen_2.13:$slick_version")
    api("com.typesafe.slick:slick-hikaricp_2.13:$slick_version")
    api('com.h2database:h2:2.1.212')
    api('org.postgresql:postgresql:42.3.3')
    api('org.flywaydb:flyway-core:8.0.1')

    // Tools
    api("com.apptastic:rssreader:2.5.0")
    api('org.reflections:reflections:0.10.1')
    api("com.typesafe.akka:akka-actor_2.13:$akka_verion")
    api("tv.cntt:glokka_2.13:2.6.1") {
        exclude group: 'com.typesafe.akka'
    }
    api("io.reactivex.rxjava3:rxjava:$rx_extension_version")
    api('com.lihaoyi:ammonite-ops_2.13:2.4.1')
    api('com.lihaoyi:requests_2.13:0.7.0')
    api('com.lihaoyi:upickle_2.13:1.6.0')
    api('com.lihaoyi:ujson_2.13:1.6.0')
    api('org.jsoup:jsoup:1.14.3')
    api("net.redhogs.cronparser:cron-parser-core:3.5")
    api("com.bladecoder.ink:blade-ink:1.0.0")
    api('com.sksamuel.scrimage:scrimage-core:4.0.22')
    api('com.sksamuel.scrimage:scrimage-filters:4.0.22')
    api('com.github.kokorin.jaffree:jaffree:2021.08.31')
    implementation('org.slf4j:slf4j-simple:1.7.32')
}
